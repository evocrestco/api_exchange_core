"""Change sequence_number to BIGINT

Revision ID: e6ce74b1dbd9
Revises: d79507e73e39
Create Date: 2025-06-18 13:09:00.223635

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e6ce74b1dbd9'
down_revision: Union[str, None] = 'd79507e73e39'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('test_lock_table')
    op.alter_column('statetransition', 'sequence_number',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_comment='Sequence number for ordering transitions',
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('statetransition', 'sequence_number',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_comment='Sequence number for ordering transitions',
               existing_nullable=True)
    op.create_table('test_lock_table',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('locked_by', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('locked_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('test_lock_table_pkey'))
    )
    # ### end Alembic commands ###

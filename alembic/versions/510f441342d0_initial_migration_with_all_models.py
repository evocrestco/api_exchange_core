"""Initial migration with all models

Revision ID: 510f441342d0
Revises: 
Create Date: 2025-06-08 23:30:33.153614

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# Import our custom JSON type
from src.db.db_base import JSON

# revision identifiers, used by Alembic.
revision: str = '510f441342d0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tenant',
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('customer_name', sa.String(length=200), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('primary_contact_name', sa.String(length=200), nullable=True),
    sa.Column('primary_contact_email', sa.String(length=200), nullable=True),
    sa.Column('primary_contact_phone', sa.String(length=50), nullable=True),
    sa.Column('address_line1', sa.String(length=200), nullable=True),
    sa.Column('address_line2', sa.String(length=200), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('tenant_config', JSON(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id')
    )
    op.create_index('ix_tenant_customer_name', 'tenant', ['customer_name'], unique=False)
    op.create_index('ix_tenant_is_active', 'tenant', ['is_active'], unique=False)
    op.create_index('ix_tenant_tenant_id', 'tenant', ['tenant_id'], unique=False)
    op.create_table('entity',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('external_id', sa.String(length=100), nullable=False),
    sa.Column('canonical_type', sa.String(length=50), nullable=False),
    sa.Column('source', sa.String(length=50), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('content_hash', sa.String(length=64), nullable=True),
    sa.Column('attributes', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'source', 'external_id', 'version', name='uq_entity_tenant_source_external_id_version')
    )
    op.create_index('ix_entity_content_hash', 'entity', ['content_hash'], unique=False)
    op.create_index('ix_entity_external_id', 'entity', ['external_id'], unique=False)
    op.create_index('ix_entity_tenant', 'entity', ['tenant_id'], unique=False)
    op.create_index('ix_entity_tenant_external_id', 'entity', ['tenant_id', 'external_id'], unique=False)
    op.create_index('ix_entity_tenant_source', 'entity', ['tenant_id', 'source'], unique=False)
    op.create_index('ix_entity_tenant_source_hash', 'entity', ['tenant_id', 'source', 'content_hash'], unique=False)
    op.create_index('ix_entity_tenant_type', 'entity', ['tenant_id', 'canonical_type'], unique=False)
    op.create_table('external_credentials',
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('system_name', sa.String(length=100), nullable=False),
    sa.Column('auth_type', sa.String(length=50), nullable=False),
    sa.Column('encrypted_credentials', sa.Text(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.String(length=10), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tenant_id', 'system_name', name='uq_credential_tenant_system')
    )
    op.create_index('ix_credential_system_name', 'external_credentials', ['system_name'], unique=False)
    op.create_index('ix_credential_tenant_id', 'external_credentials', ['tenant_id'], unique=False)
    op.create_table('processingerror',
    sa.Column('entity_id', sa.String(length=36), nullable=False),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('error_type_code', sa.String(length=50), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('processing_step', sa.String(length=100), nullable=False),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_processing_error_entity_id', 'processingerror', ['entity_id'], unique=False)
    op.create_index('ix_processing_error_tenant', 'processingerror', ['tenant_id'], unique=False)
    op.create_index('ix_processing_error_type', 'processingerror', ['error_type_code'], unique=False)
    op.create_table('statetransition',
    sa.Column('entity_id', sa.String(length=36), nullable=False),
    sa.Column('from_state', sa.String(length=50), nullable=False),
    sa.Column('to_state', sa.String(length=50), nullable=False),
    sa.Column('actor', sa.String(length=100), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('transition_type', sa.Enum('NORMAL', 'ERROR', 'RECOVERY', 'MANUAL', 'TIMEOUT', 'RETRY', name='transitiontypeenum', native_enum=False), nullable=False),
    sa.Column('processor_data', JSON(), nullable=True, comment='Processor-specific data about the transition'),
    sa.Column('queue_source', sa.String(length=100), nullable=True, comment='Queue from which the message was received'),
    sa.Column('queue_destination', sa.String(length=100), nullable=True, comment='Queue to which the message was sent'),
    sa.Column('transition_duration', sa.Integer(), nullable=True, comment='Time (in ms) spent in the previous state'),
    sa.Column('sequence_number', sa.Integer(), nullable=True, comment='Sequence number for ordering transitions'),
    sa.Column('tenant_id', sa.String(length=100), nullable=False),
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['entity_id'], ['entity.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.tenant_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_state_transition_entity_id', 'statetransition', ['entity_id'], unique=False)
    op.create_index('ix_state_transition_entity_tenant', 'statetransition', ['entity_id', 'tenant_id'], unique=False)
    op.create_index('ix_state_transition_sequence', 'statetransition', ['entity_id', 'sequence_number'], unique=False)
    op.create_index('ix_state_transition_tenant', 'statetransition', ['tenant_id'], unique=False)
    op.create_index('ix_state_transition_to_state', 'statetransition', ['to_state'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_state_transition_to_state', table_name='statetransition')
    op.drop_index('ix_state_transition_tenant', table_name='statetransition')
    op.drop_index('ix_state_transition_sequence', table_name='statetransition')
    op.drop_index('ix_state_transition_entity_tenant', table_name='statetransition')
    op.drop_index('ix_state_transition_entity_id', table_name='statetransition')
    op.drop_table('statetransition')
    op.drop_index('ix_processing_error_type', table_name='processingerror')
    op.drop_index('ix_processing_error_tenant', table_name='processingerror')
    op.drop_index('ix_processing_error_entity_id', table_name='processingerror')
    op.drop_table('processingerror')
    op.drop_index('ix_credential_tenant_id', table_name='external_credentials')
    op.drop_index('ix_credential_system_name', table_name='external_credentials')
    op.drop_table('external_credentials')
    op.drop_index('ix_entity_tenant_type', table_name='entity')
    op.drop_index('ix_entity_tenant_source_hash', table_name='entity')
    op.drop_index('ix_entity_tenant_source', table_name='entity')
    op.drop_index('ix_entity_tenant_external_id', table_name='entity')
    op.drop_index('ix_entity_tenant', table_name='entity')
    op.drop_index('ix_entity_external_id', table_name='entity')
    op.drop_index('ix_entity_content_hash', table_name='entity')
    op.drop_table('entity')
    op.drop_index('ix_tenant_tenant_id', table_name='tenant')
    op.drop_index('ix_tenant_is_active', table_name='tenant')
    op.drop_index('ix_tenant_customer_name', table_name='tenant')
    op.drop_table('tenant')
    # ### end Alembic commands ###
